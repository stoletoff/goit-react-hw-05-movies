{"version":3,"file":"static/js/MoviesPage.ad6b0418.chunk.js","mappings":"6MAGe,SAASA,EAAT,GAAuC,IAAdC,EAAa,EAAbA,MAAOC,EAAM,EAANA,GAE7C,GAAyCC,EAAAA,EAAAA,MAAzC,eAAOC,EAAP,UAEA,OACE,yBACE,SAAC,KAAD,CACEC,GAAE,0CAAqCH,GACvCI,MAAO,CACLC,UAAUC,EAAAA,EAAAA,MAAcC,SACxBC,OAAQN,EAAaO,IAAI,UAJ7B,SAOGV,KAIR,CCjBc,SAASW,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OACnC,OACE,+BACE,wBACGA,EAAOC,KAAI,gBAAGZ,EAAH,EAAGA,GAAID,EAAP,EAAOA,MAAP,OACV,SAACD,EAAD,CAAwBC,MAAOA,EAAOC,GAAIA,GAAtBA,EADV,OAMnB,C,qICZD,EAAuB,yB,SCKR,SAASa,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAAwCjB,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBiB,EAArB,KACMX,GAASF,EAAAA,EAAAA,MAAcF,OAASF,EAAaO,IAAI,SAYvD,SAASW,EAAcL,GACrB,GAAIA,EAAO,CACTI,EAAgB,SAAD,OAAUJ,IACzBG,EAAgB,IAChB,IACmBG,EAAAA,EAAAA,qBAAyBN,GACjCO,MAAK,SAAAC,GACZA,EAAKA,KAAKC,QAAQZ,KAAI,gBAAGZ,EAAH,EAAGA,GAAID,EAAP,EAAOA,MAAP,OACpBmB,GAAgB,SAAAO,GAAC,wBAAQA,GAAR,CAAW,CAAEzB,GAAAA,EAAID,MAAAA,IAAjB,GADG,GAGvB,GACe,CAAhB,MAAO2B,GAAS,CACnB,CACF,EAvBDC,EAAAA,EAAAA,YAAU,WACRnB,GAAUN,EAAa0B,IAAI,QAASpB,GACpCA,GAAUY,EAAcZ,EAEzB,GAAE,KAEHmB,EAAAA,EAAAA,YAAU,WACRT,EAAgB,GACjB,GAAE,CAACV,IAyBJ,OACE,6BACE,kBAAMqB,UAAWC,EAAQC,SAVR,SAAAC,GACnBA,EAAEC,gBACH,EAQG,WACE,kBAAOC,SAPQ,SAAAF,GACnBhB,EAASgB,EAAEG,OAAOC,MACnB,EAKoCA,MAAOrB,KACtC,mBAAQsB,QAAS,kBAAMjB,EAAcL,EAApB,EAAjB,SAA6C,cAEtB,IAAxBE,EAAaqB,SAAgB,SAAC5B,EAAA,EAAD,CAAYC,OAAQM,MAGvD,C","sources":["components/MoviesList/MovieListItem/MovieListItem.jsx","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/pages/MoviesPage.module.css?f2bc","pages/MoviesPage.jsx"],"sourcesContent":["import { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport default function MovieListItem({ title, id }) {\n  // eslint-disable-next-line no-unused-vars\n  const [searchParams, _setSearchParams] = useSearchParams();\n\n  return (\n    <li>\n      <Link\n        to={`/goit-react-hw-05-movies/movies/${id}`}\n        state={{\n          location: useLocation().pathname,\n          search: searchParams.get('query'),\n        }}\n      >\n        {title}\n      </Link>\n    </li>\n  );\n}\n\nMovieListItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n","import MovieListItem from './MovieListItem/MovieListItem';\nimport PropTypes from 'prop-types';\n\nexport default function MoviesList({ movies }) {\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, title }) => (\n          <MovieListItem key={id} title={title} id={id} />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"MoviesPage_form__vECho\"};","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport api from 'services/api';\nimport s from './MoviesPage.module.css';\n\nexport default function MoviesPage() {\n  const [query, setQuery] = useState('');\n  const [moviesSearch, setMoviesSearch] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = useLocation().state || searchParams.get('query');\n\n  useEffect(() => {\n    search && searchParams.set('query', search);\n    search && onClickSearch(search);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    setMoviesSearch([]);\n  }, [search]);\n\n  function onClickSearch(query) {\n    if (query) {\n      setSearchParams(`query=${query}`);\n      setMoviesSearch([]);\n      try {\n        const response = api.fetchMoviesWithQuery(query);\n        response.then(data => {\n          data.data.results.map(({ id, title }) =>\n            setMoviesSearch(m => [...m, { id, title }])\n          );\n        });\n      } catch (error) {}\n    }\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <main>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <input onChange={handleChange} value={query} />\n        <button onClick={() => onClickSearch(query)}>Search</button>\n      </form>\n      {moviesSearch.length !== 0 && <MoviesList movies={moviesSearch} />}\n    </main>\n  );\n}\n"],"names":["MovieListItem","title","id","useSearchParams","searchParams","to","state","location","useLocation","pathname","search","get","MoviesList","movies","map","MoviesPage","useState","query","setQuery","moviesSearch","setMoviesSearch","setSearchParams","onClickSearch","api","then","data","results","m","error","useEffect","set","className","s","onSubmit","e","preventDefault","onChange","target","value","onClick","length"],"sourceRoot":""}